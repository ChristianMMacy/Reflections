Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?
A: It quickly showed me which lines were different.
This made it easier to find the typo because it eliminated identical lines.

Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A: I think it makes it a lot easier to go back and find previous versions of a solution so that you can branch off new solutions.

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
A: I really like the idea of having an automatic system as a backup, but for working files that I'm editing I think the manual process makes sense. I just don't like the idea that we could have a power outage and there's no auto-save version.

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A: Google Docs is really designed for single files like resumes or presentations or spreadsheets. So I think to keep things simple on the back end and for the user experience they focus on the typical use case. Though I don't know if most authors would think to use Git to write a book :-)

Q: How can you use the commands git log and git diff to view the history of files?
A: I really liked git log --stat, actually, because I could see more info than with log. With that said it takes more scrolling. Anyways you use log to find the commit you want based on description of change and diff to find the change(s).

Q: How might using version control make you more confident to make changes that could break something?
A: I can easily revert to old versions and compare - it's way faster to do a checkout than to rename a file.

Q: Now that you have your workspace set up, what do you want to try using Git for?
A: I want to find a problem and fix it!!